@model TakagiSugeno.Model.ViewModels.VariableVM
@using TakagiSugeno.Model;
@using TakagiSugeno.Tools;
@{
    IOType variableType = IOType.Input;
    if(Model.Type == VariableType.OutputConst || Model.Type == VariableType.OutputFunction)
    {
        variableType = IOType.Output;
    }
}
<form class="form-inline">
    <div class="panel panel-default variable-row" id="@Model.VariableId">
        <div class="panel-heading">
            @Html.HiddenFor(m => m.VariableId)
            <span class="glyphicon glyphicon-remove remove-variable pull-right"></span>
            <div class="form-group">
                <label asp-for="@Model.Name">Nazwa</label>
                <input asp-for="@Model.Name" class="form-control" style="width: 100px" />
            </div>
            <div class="form-group">
                <label asp-for="@Model.Type">Typ</label>
                <select asp-for="@Model.Type" asp-items="Html.GetEnumSelectList<VariableType>(variableType)" class="form-control select-type"></select>
            </div>
        </div>
        <div class="panel-body">
            <div class="form-group">
                @for (int j = 0; j < Model.FunctionData.Count; j++)
                {
                    var key = Model.FunctionData.Keys.ElementAt(j);
                    <div class="form-group">
                        <label asp-for="@key" class="control-label">@key:</label>
                        <input asp-for="@Model.FunctionData[key]" style="width:80px" class="form-control chart-data-input" id="@key" />
                    </div>

                }
            </div>
        </div>
    </div>
</form>


