@model TakagiSugeno.Model.ViewModels.RuleGeneralVM
@inject TakagiSugeno.Model.Services.RulesService rulesService;
@using TakagiSugeno.Model;
@{
    ViewBag.Title = "Reguły";
    int index = 1;
    var names = rulesService.GetSystemInputsOutputsNames(ViewBag.SystemId);
}


<div class="row">
    <div class="col-sm-8">
        <h2 class="header">
            Reguły
        </h2>
    </div>
    <div class="col-sm-4">
        <div class="pull-right">
            <button class="btn btn-primary" id="btnSave" style="margin-top:20px;" disabled><span class="glyphicon glyphicon-save"></span> Zapisz</button>
            <button class="btn btn-danger" id="btnCancel" style="margin-top:20px;" disabled data-toggle="modal" data-target="#cancelModal"><span class="glyphicon glyphicon-bullhorn"></span> Anuluj</button>
        </div>

    </div>
</div>
<div class="alert" id="alert-container" hidden>
    <span class="glyphicon glyphicon-remove hide-alert pull-right" onclick="hideAlert()"></span>
    <text id="alert-message"></text>
</div>
<div class="row">
<div class="col-sm-12" style="overflow-x:scroll;">
<table class="table rules-table">
    <colgroup>
        <col span="1" class="id-col" />
        @foreach (string name in names)
        {
            <col span="1" class="variable-col" />
            if (names.IndexOf(name) != names.Count - 1)
            {
                <col span="1" class="operation-col" />
            }
        }
    </colgroup>
    <thead>
        <tr>
            <th>#</th>
        @foreach (string name in names)
        {
            <th>@name is</th>
            if (names.IndexOf(name) != names.Count - 1)
            {
                <th></th>
            }
        }
    </tr>
    </thead>
    <tbody>
        @foreach (var rule in Model.Rules)
        {
            <tr>
                <td style="padding-top:25px;">
                    <span>@(index++).&nbsp;&nbsp;<i class="glyphicon glyphicon-chevron-down collapse-button"></i></span>                 
                </td>
                @foreach (var elem in rule.RuleElements)
                {
                    //bool isLast = rule.RuleElements.ElementAt(rule.RuleElements.IndexOf(elem) + 1).Type == RuleElementType.OutputPart ? true : false;
                    <td>                       
                        <div class="panel panel-default collapse-panel">
                            <div class="panel-heading">
                                <select asp-for="@elem.VariableId" asp-items="@Model.VariablesLists[elem.InputOutputId]" class="form-control"></select>
                            </div>
                            <div class="panel-body chart-container">
                                @{
                                    if (elem.Type == RuleElementType.InputPart)
                                    {
                                        Dictionary<int, string> chartData = Model.ChartsData[elem.InputOutputId];
                                        foreach (var item in chartData)
                                        {
                                            <div class="json-data" hidden data-chartJson='@item.Value' data-type=0></div> //TODO pass type to vm, add id to charts
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </td>
                    if (elem.Type == RuleElementType.InputPart)
                    {
                        bool isLast = rule.RuleElements.Where((e, i) => e.Type == RuleElementType.OutputPart && i == rule.RuleElements.IndexOf(elem) + 1).Count() > 0;
                        if (isLast)
                        {
                        <td>
                            <div class="panel panel-default">
                                <div class="panel-heading text-only">
                                    <span>Then</span>
                                </div>
                            </div>
                        </td>
                        }
                        else
                        {
                        <td>
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <select class="form-control">
                                        <option value="0" selected>And</option>
                                        <option value="1">Or</option>
                                    </select>
                                </div>
                            </div>                          
                        </td>
                        }
                    }
                    else
                    {
                        if (rule.RuleElements.IndexOf(elem) != rule.RuleElements.Count - 1)
                        {
                            <td>
                                <div class="panel panel-default">
                                    <div class="panel-heading text-only">
                                        <span>And</span>
                                    </div>
                                </div>
                            </td>
                        }
                    }
                }
            </tr>
        }
    </tbody>
</table>
</div>
</div>
<div id="temp" style="background-color:red;" hidden>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        //$(".collapse-panel .panel-body").hide();

        var containers = $(".chart-container");
        $.each(containers, function (index, value) {
            var id = $(value).attr("id")
            var chart = new CanvasJS.Chart("temp", {
                data: [],
            });
            
            $(value).find(".json-data").each(function () {
                createChartFromJSONData(chart, $(this));
            })
            //chart.render();
            $(value).CanvasJSChart(chart.options);
        })

        $(".collapse-panel .panel-body").hide();
    });

    $(".rules-table").on("click", ".collapse-button", function () {
        var $this = $(this);
        if ($this.hasClass('glyphicon-chevron-down')) {
            $this.parents('tr').find('.panel-body').slideDown();
            $this.removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
        } else {
            $this.parents('tr').find('.panel-body').slideUp();
            $this.removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
        }
        return false;
    });
</script>

