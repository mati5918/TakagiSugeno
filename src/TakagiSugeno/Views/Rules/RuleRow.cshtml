@model TakagiSugeno.Model.ViewModels.RuleVM
@using TakagiSugeno.Model
@inject TakagiSugeno.Model.Services.RulesService rulesService
@{
    var VariablesLists = ViewBag.VariablesList ?? rulesService.CreateVariablesLists(Model.SystemId);
    var ChartsData = ViewBag.ChartsData ?? rulesService.CreateChartsData(Model.SystemId); 
}

<tr id="@Model.RuleId" data-systemId="@Model.SystemId">
    <td style="padding-top:25px;">
        <span class="glyphicon glyphicon-remove remove-rule"></span>
    </td>
    <td style="padding-top:25px;">
        <span><span class="index"></span>.&nbsp;&nbsp;<i class="glyphicon glyphicon-chevron-down collapse-button"></i></span>
    </td>
    @foreach (var elem in Model.RuleElements)
    {
        <td class="element-variable">
            @{var i = Model.RuleElements.IndexOf(elem); }
            <input asp-for="RuleElements[i].ElementId" class="form-control elementId" type="hidden" />
            <input asp-for="RuleElements[i].Type" class="form-control elementType" type="hidden" />
            <input asp-for="RuleElements[i].InputOutputId" class="form-control elementInputOutputId" type="hidden" />
            <div class="panel panel-default collapse-panel">
                <div class="panel-heading">
                    @if (elem.Type == RuleElementType.InputPart)
                    {
                        <select asp-for="@elem.VariableId" asp-items="@VariablesLists[elem.InputOutputId]" class="form-control variable-select variableId"></select>
                    }
                    else
                    {
                        <select asp-for="@elem.VariableId" asp-items="@VariablesLists[elem.InputOutputId]" class="form-control variableId"></select>
                    }

                </div>
                @{
                    if (elem.Type == RuleElementType.InputPart)
                    {
                        <div class="panel-body chart-container">
                            @{var chartData = ChartsData[elem.InputOutputId];}
                            @foreach (var item in chartData)
                            {
                                <div class="json-data" hidden data-chartJson='@item.Data' data-type=@item.Type data-id=@item.VariableId></div>
                            }
                        </div>
                    }
                }
            </div>
        </td>
                                if (elem.Type == RuleElementType.InputPart)
                                {
                                    bool isLast = Model.RuleElements.Where((e, j) => e.Type == RuleElementType.OutputPart && j == Model.RuleElements.IndexOf(elem) + 1).Count() > 0;
                                    if (isLast)
                                    {
                                        <td>
                                            <div class="panel panel-default">
                                                <div class="panel-heading text-only">
                                                    <span>Then</span>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <div class="panel panel-default">
                                                <div class="panel-heading">
                                                    <select class="form-control">
                                                        <option value="0" selected>And</option>
                                                        <option value="1">Or</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                }
                                else
                                {
                                    if (Model.RuleElements.IndexOf(elem) != Model.RuleElements.Count - 1)
                                    {
                                        <td>
                                            <div class="panel panel-default">
                                                <div class="panel-heading text-only">
                                                    <span>And</span>
                                                </div>
                                            </div>
                                        </td>
                                        }
                                    }
                                }
</tr>

