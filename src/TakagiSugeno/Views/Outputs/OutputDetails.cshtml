@model TakagiSugeno.Model.ViewModels.OutputVM
@{
    ViewBag.Title = "Wyjścia";
    string header = (ViewBag.IsNewOutput != null) ? "Nowe wyjście" : "Szczegóły wyjścia";
}

<div class="row">
<div class="col-sm-8">
    <h2 class="header">
        @header
    </h2>
</div>
<div class="col-sm-4">
    <div class="pull-right">
        <button class="btn btn-primary" onclick="save()" id="btnSave" style="margin-top:20px;" disabled><span class="glyphicon glyphicon-save"></span> Zapisz</button>
        <button class="btn btn-danger" onclick="" id="btnCancel" style="margin-top:20px;" disabled data-toggle="modal" data-target="#cancelModal"><span class="glyphicon glyphicon-bullhorn"></span> Anuluj</button>
    </div>

</div>
</div>
<div class="alert" id="alert-container" hidden>
    <span class="glyphicon glyphicon-remove hide-alert pull-right" onclick="hideAlert()"></span>
    <text id="alert-message"></text>
</div>
<div>
    <div class="row">
        <div class="col-sm-8">
            <form class="form-inline">
                <label asp-for="Name">Nazwa</label>
                <input asp-for="Name" class="form-control" id="InputName" />
                <input asp-for="OutputId" class="form-control" id="OutputId" type="hidden" />
                <input asp-for="SystemId" class="form-control" id="SystemId" type="hidden" />
            </form>
        </div>

    </div>
    <div class="row">
        <div class="col-sm-2"><h3>Zmienne</h3></div>
        <div class="col-sm-4">
            <button class="btn btn-success pull-right" style="margin-top:15px;" id="addVariable"><span class="glyphicon glyphicon-plus"></span> Dodaj</button>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6 variables-list">
            @for (int i = 0; i < Model.Variables.Count; i++)
            {
                Html.RenderPartial("~/Views/Inputs/VariableRow.cshtml", Model.Variables[i]);
            }
        </div>
        <div class="col-sm-6">
            <div id="chart-container"></div>
        </div>
    </div>
    <div id="cancelModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Porzucenie zmian.</h4>
                </div>
                <div class="modal-body">
                    <p>Czy na pewno chcesz porzucić zmiany dla tego wyjścia?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" onclick="cancelChanges()" data-dismiss="modal">Tak</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Nie</button>
                </div>
            </div>

        </div>
    </div>
    <div id="removeModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Usunięcie wyjścia.</h4>
                </div>
                <div class="modal-body">
                    <p>Czy na pewno chcesz usunąć wyjście <span id="remove-output-name"></span>?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-dismiss="modal" onclick="removeOutput(this)">Tak</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Nie</button>
                </div>
            </div>

        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $(".variables-list").on("click", ".variable-row", function () {
            var clickedId = $(this).attr("id");
            selectVariable(clickedId);
        });

        $(".variables-list").on("focus", "input", function () {
            var clickedId = $(this).parents(".variable-row").attr("id");
            selectVariable(clickedId);
        });

        $(".variables-list").on("mouseenter", ".variable-row", function () {
            var clickedId = $(this).attr("id");
            hoverVariable(clickedId);
        });

        $(".variables-list").on("mouseleave", ".variable-row", function () {
            cancelHoverVariable();
        });

        $("#addVariable").click(function () {
            var fakeId = createFakeId();
            var url = "/Outputs/AddVariable/?fakeId=" + parseInt(fakeId);
            $.ajax({
                url: url,
                type: "GET",
                success: function (response) {
                    $(".variables-list").append(response);
                    selectVariable(fakeId);
                    refreshButtonsState();
                }
            });
        });

        $(".variables-list").on("click", ".remove-variable", function () {
            $(this).closest("form").remove();
            refreshButtonsState();
            return false;
        });

        $(document).on("change", "select, input", function () {
            refreshButtonsState();
        });

        $(".variables-list").on("change", ".chart-data-input", function () {
            var regex = /^\-?\d+([\.\,]\d+)?$/;
            var val = $(this).val();
            var isMatch = regex.test(val);
            if (!isMatch) {
                $(this).parent(".form-group").addClass("has-error");
            }
            else {
                $(this).parent(".form-group").removeClass("has-error");
            }
        });


    })

    function save() {
        var outputVM = collectData();
        outputVM.OutputId = $("#OutputId").val();
        $.ajax({
            url: "@Url.Action("Save")",
            type: "POST",
            data: JSON.stringify(outputVM),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
            if (response.errors.length == 0) {
                printSaveSuccess();
                $("#btnCancel, #btnSave").prop("disabled", true);
                $(".header").text("Szczegóły wyjścia");
                getOutputsList($("#SystemId").val());
                $("#OutputId").val(response.id);
            }
            else {
                printSaveErrors(response);
            }
            $("#alert-container").show();
        }
    });
    }

    function cancelChanges() {
        setTimeout(function(){
            openOutput( $("#OutputId").val(), '@ViewBag.Title')
        },200)
    }
</script>